# Falco AI Security System - Falco Configuration
# Falco主配置文件，定义监控规则和输出设置

# =============================================================================
# 基础配置
# =============================================================================

# 规则文件路径 - 使用默认内置规则和本地自定义规则
rules_file:
  - /etc/falco/falco_rules.yaml
  - /etc/falco/falco_rules.local.yaml

# 时间格式
time_format_iso_8601: false

# JSON输出
json_output: true
json_include_output_property: true
json_include_tags_property: true

# =============================================================================
# 日志输出配置
# =============================================================================

# 文件输出
file_output:
  enabled: true
  keep_alive: false
  filename: /var/log/falco/falco.log

# 标准输出
stdout_output:
  enabled: true

# Syslog输出
syslog_output:
  enabled: false

# =============================================================================
# gRPC配置
# =============================================================================

# gRPC服务器配置
grpc:
  enabled: true
  bind_address: "0.0.0.0:5060"
  threadiness: 0

# gRPC输出
grpc_output:
  enabled: true

# =============================================================================
# HTTP输出配置
# =============================================================================

# HTTP输出到后端API - 暂时禁用以简化配置
http_output:
  enabled: false

# =============================================================================
# 程序输出配置
# =============================================================================

# 程序输出（用于自定义处理）
program_output:
  enabled: false
  keep_alive: false
  program: "jq '{timestamp: .time, rule: .rule, priority: .priority, message: .output}' | curl -X POST -H 'Content-Type: application/json' -d @- http://backend:8000/api/v1/falco/events"

# =============================================================================
# 优先级和过滤配置
# =============================================================================

# 日志级别
log_level: info

# 优先级阈值
priority: debug

# 缓冲输出
buffered_outputs: false

# 输出超时
outputs_timeout: 2000

# =============================================================================
# 系统调用监控配置
# =============================================================================

# 系统调用事件源
syscall_event_drops:
  actions:
    - log
    - alert
  rate: 0.03333
  max_burst: 1000

# 系统调用缓冲区大小
syscall_buf_size_preset: 4

# 现代BPF探针
modern_bpf:
  cpus_for_each_syscall_buffer: 2

# =============================================================================
# 规则匹配配置
# =============================================================================

# 规则匹配
rule_matching: first

# 监控的系统调用 - 启用所有系统调用并自动修复
# 使用空的 custom_set 和 repair: false 来激活所有系统调用
base_syscalls:
  repair: false

# 启用所有系统调用以避免 unsupported-evttype 警告
syscall_event_timeouts:
  max_consecutives: 1000

# =============================================================================
# 插件配置
# =============================================================================

# 插件配置 - 暂时禁用以简化配置
plugins: []

# =============================================================================
# 负载均衡配置
# =============================================================================

# CPU使用率
load_plugins: []

# =============================================================================
# 监控目标配置
# =============================================================================

# 监控容器
watch_config_files: true

# 配置文件监控间隔（秒）
watch_config_files_interval: 1

# =============================================================================
# 元数据配置
# =============================================================================

# 元数据
metadata:
  - name: "falco_version"
    value: "0.41.3"
  - name: "environment"
    value: "production"
  - name: "deployment"
    value: "falco-ai-security"

# =============================================================================
# 性能调优配置
# =============================================================================

# 性能配置 - 使用现代eBPF避免内核模块编译问题
engine:
  kind: modern_ebpf
  modern_ebpf:
    cpus_for_each_syscall_buffer: 2

# 内存限制
max_events_per_second: 5000

# =============================================================================
# 自定义输出格式
# =============================================================================

# 自定义输出格式模板
output_format:
  json_output: |
    {
      "timestamp": "%time%",
      "rule": "%rule%",
      "priority": "%priority%",
      "source": "%source%",
      "message": "%output%",
      "output_fields": %output_fields%,
      "hostname": "%hostname%",
      "tags": %tags%
    }

# =============================================================================
# 异常处理配置
# =============================================================================

# 异常处理
exceptions:
  - name: "falco_exceptions"
    fields: [proc.name, proc.cmdline]
    comps: [=, contains]
    values:
      - ["docker", ""]
      - ["containerd", ""]
      - ["runc", ""]
      - ["systemd", ""]

# =============================================================================
# 日志轮转配置
# =============================================================================

# 日志轮转
log_rotation:
  enabled: true
  max_size: 100MB
  max_files: 10
  compress: true